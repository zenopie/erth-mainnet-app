name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        clean: true


    - name: Deploy and Build on Remote Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_SERVER_HOST }}
        username: ${{ secrets.REMOTE_SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Define directories
          HOME_DIR=/home/ubuntu/earth-mainnet-app
          WWW_DIR=/var/www/earth-mainnet-app
          SERVER_DIR=$HOME_DIR/server

          # Create the home directory if it doesn't exist
          if [ ! -d "$HOME_DIR" ]; then
            mkdir -p $HOME_DIR
          fi

          # Navigate to the home directory where the source code is stored
          cd $HOME_DIR
          
          # Check if it's already a Git repository
          if [ ! -d ".git" ]; then
            git clone https://github.com/zenopie/erth-mainnet-app.git .
          else
            git pull origin main
          fi

          # Install frontend dependencies
          if [ -f package.json ]; then
            npm install
            npm update
          else
            echo "Error: package.json not found in root!"
            exit 1
          fi

          # Build the React frontend
          npm run build

          # Remove old files in the web directory
          sudo rm -rf $WWW_DIR/*

          # Move the build output to the web directory
          sudo mv $HOME_DIR/build/* $WWW_DIR/

          # Restart NGINX to apply the changes
          sudo systemctl restart nginx

          # Ensure the server dependencies are updated
          cd $SERVER_DIR

          if [ -f package.json ]; then
            npm install
            npm update
          else
            echo "Error: package.json not found in server directory!"
            exit 1
          fi

          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            sudo npm install pm2 -g
          fi

          # Stop any existing instance of the server
          pm2 stop erth-network-server || true

          # Start the server with PM2
          pm2 start $SERVER_DIR/server.js --name "erth-network-server"

          # Save the PM2 process list
          pm2 save

          # Ensure PM2 restarts on reboot
          pm2 startup systemd
          sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
          sudo systemctl enable pm2-ubuntu